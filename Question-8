import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
 
public class Main {
    public static int maxLen(Vector<Integer> A, int n) {
        int sum = 0;
        int longest_length = 0;
        Map<Integer, Integer> mpp = new HashMap<>();
        mpp.put(0, -1);
 
        for (int i = 0; i < A.size(); i++) {
            sum += A.get(i);
 
            if (mpp.containsKey(sum)) {
                longest_length = Math.max(longest_length, i - mpp.get(sum));
            } else {
                mpp.put(sum, i);
            }
        }
 
        return longest_length;
    }
 
    public static void main(String[] args) {
        Vector<Integer> A = new Vector<>();
        A.add(15);
        A.add(-2);
        A.add(2);
        A.add(-8);
        A.add(1);
        A.add(7);
        A.add(10);
        A.add(23);
        int N = 8;
        int answer = maxLen(A, N);
        System.out.println("Answer is " + answer);
    }
}
 
